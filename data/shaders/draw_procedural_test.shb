#pragma shader_language HLSL

global(gbuffer)
[
    struct VsToFsStruct
    {
        float4 Pos : SV_Position;
        float2 Uv  : TEXCOORD;
    };
]

vertex(gbuffer, region_combine, resolve_pass) => "engine/fullscreen_vertex.cg"

fragment(gbuffer) 
[
    struct FSOutput
    {
        float4 Color1 : SV_TARGET0;
        float4 Color2 : SV_TARGET1;
        float4 Color3 : SV_TARGET2;
    };

    FSOutput main(VsToFsStruct input)
    {
        FSOutput output = (FSOutput) 0;
        output.Color1 = float4(input.Uv, 1, 1);
        output.Color2 = float4(1, input.Uv, 1);
        output.Color3 = float4(input.Uv.r, 1, input.Uv.g, 1);
        return output;
    }
];

fragment(region_combine, resolve_pass) 
[
    float4 main(VsToFsStruct input) : SV_TARGET
    {
        return float4(input.Uv, 1, 1);
    }
];