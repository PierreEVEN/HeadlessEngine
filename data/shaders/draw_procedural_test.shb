#pragma shader_language HLSL

global(gbuffer)
[
struct VsToFsStruct
{
    float4 Pos : SV_Position;
};
]

vertex(gbuffer)
[
VsToFsStruct main(uint vertex_index : SV_VertexID)
{
    VsToFsStruct output = (VsToFsStruct) 0;
    output.Pos = float4(float2((vertex_index << 1) & 2, vertex_index & 2) * 2.0f - 1.0f, 0.0f, 1.0f);
    return output;
}
];

fragment(gbuffer) 
[
struct FSOutput
{
    float4 Color1 : SV_TARGET0;
    float4 Color2 : SV_TARGET1;
    float4 Color3 : SV_TARGET2;
};
	
FSOutput main(VsToFsStruct input)
{
    FSOutput output = (FSOutput) 0;
    output.Color1 = float4(1, 1, 1, 1);
    output.Color2 = float4(1, 1, 1, 1);
    output.Color3 = float4(1, 1, 1, 1);
    return output;
}
];